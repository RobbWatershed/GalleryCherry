apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'
apply plugin: 'org.sonarqube'
apply plugin: 'de.mobilej.unmock'

// apply signing configuration if config file exists
if (file('signing.gradle').exists()) {
    apply from: 'signing.gradle'
}

android {
    compileSdkVersion 29
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }
    buildToolsVersion "29.0.3"
    defaultConfig {
        applicationId "me.devsaki.cherry"
        minSdkVersion 21
        //noinspection ExpiringTargetSdkVersion
        targetSdkVersion 29
        versionCode 130 // is updated automatically by BitRise; only used when building locally
        versionName '1.6-dev'

        def includeObjectBoxBrowser = System.getenv("INCLUDE_OBJECTBOX_BROWSER")?:"false"

        buildConfigField "boolean", "INCLUDE_OBJECTBOX_BROWSER", includeObjectBoxBrowser

        proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        renderscriptTargetApi 21
        renderscriptSupportModeEnabled false

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [ "objectbox.incremental" : "true" ]
            }
        }
    }
    buildTypes {
        debug {
            minifyEnabled true
            applicationIdSuffix ".debug"
            versionNameSuffix "-DEBUG"

            buildConfigField 'String', 'UPDATE_URL', '"https://raw.githubusercontent.com/RobbWatershed/GalleryCherry/dev/app/"'

            proguardFile 'proguard-rules-debug.pro'
        }
        release {
            debuggable false
            minifyEnabled true

            buildConfigField 'String', 'UPDATE_URL', '"https://raw.githubusercontent.com/RobbWatershed/GalleryCherry/master/app/"'

            proguardFile 'proguard-rules-release.pro'
            testProguardFile 'proguard-rules-test.pro'

            // Library specific proguard files
            proguardFiles fileTree(dir: '../.proguard', include: ['*.pro']).asList().toArray()
        }
    }
    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }
}

dependencies {
    def includeObjectBoxBrowser = System.getenv("INCLUDE_OBJECTBOX_BROWSER") ?: "false"

    // Compile any included libraries
    implementation fileTree(include: ['*jar'], dir: 'libs')
    implementation fileTree(include: ['*aar'], dir: 'libs')

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.19.0'
    testImplementation 'io.kotlintest:kotlintest-assertions:3.4.2'
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.3.72"

    // Firebase
    implementation 'com.google.firebase:firebase-analytics:17.2.3'

    // Crashlytics
    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'

    // Support libraries
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    //implementation 'com.google.android.material:material:1.0.0'
    implementation 'com.google.android.material:material:1.1.0-alpha08'
    implementation 'androidx.preference:preference:1.1.1'
    implementation 'androidx.media:media:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v13:1.0.0'
    implementation 'com.google.android.gms:play-services-safetynet:17.0.0'
    implementation 'androidx.paging:paging-runtime:2.1.2'
    implementation "androidx.fragment:fragment-ktx:1.2.4"
    implementation "androidx.documentfile:documentfile:1.0.1" // <-- if this evolves, please examine FileUtil.fromTreeUriOptimized for evolutions
    implementation "androidx.viewpager2:viewpager2:1.0.0"

    // For ViewModel to work
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.2.0'
    kapt('androidx.lifecycle:lifecycle-common-java8:2.2.0')


    // Image loader: github.com/bumptech/glide
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    kapt('com.github.bumptech.glide:compiler:4.11.0')
    implementation 'com.github.bumptech.glide:okhttp3-integration:4.11.0'

    // Intro screens or slides: github.com/apl-devs/AppIntro
    implementation 'com.github.paolorotolo:appintro:v5.1.0'

    // Java serialization/deserialization (Java Objects into JSON and back): https://github.com/square/moshi
    implementation 'com.squareup.moshi:moshi:1.9.2'
    implementation 'com.squareup.moshi:moshi-adapters:1.9.2'

    // Timber (Extensible Logger): github.com/JakeWharton/timber
    implementation 'com.jakewharton.timber:timber:4.7.1'

    // Download app updates (without user prompts): github.com/smanikandan14/ThinDownloadManager
    implementation 'com.mani:ThinDownloadManager:1.3.0'

    // HTTP & HTTP/2 client: github.com/square/okhttp
    implementation 'com.squareup.okhttp3:okhttp:4.7.2'

    // For downloading images : github.com/google/volley
    implementation 'com.android.volley:volley:1.1.1' // <-- if this evolves, please examine RequestQueueManager.getRequestQueue for evolutions

    // EventBus: github.com/greenrobot/EventBus
    implementation 'org.greenrobot:eventbus:3.2.0'

    // JSOUP HTML parser: github.com/jhy/jsoup
    implementation 'org.jsoup:jsoup:1.11.3'

    // Lightweight Stream : github.com/aNNiMON/Lightweight-Stream-API
    implementation 'com.annimon:stream:1.2.1'

    // LeakCanary: github.com/square/leakcanary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.2'

    // Specific UI layout for tag mosaic : github.com/google/flexbox-layout
    implementation 'com.google.android:flexbox:2.0.0'

    // https://mvnrepository.com/artifact/commons-io/commons-io
    implementation 'commons-io:commons-io:2.6'

    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    implementation 'org.apache.commons:commons-lang3:3.9'

    // https://mvnrepository.com/artifact/org.apache.commons/commons-text/
    implementation 'org.apache.commons:commons-text:1.4' // !!! Don't update that one or Lint will go mad

    // Retrofit-ready-ready HTML parser with CSS selectors : https://github.com/DroidsOnRoids/jspoon
    implementation 'pl.droidsonroids:jspoon:1.3.2'
    implementation 'pl.droidsonroids.retrofit2:converter-jspoon:1.3.2'

    //    https://github.com/square/retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.6.2'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.6.2'
    implementation 'com.squareup.retrofit2:converter-moshi:2.6.2'

    //    https://github.com/ReactiveX/RxJava
    implementation 'io.reactivex.rxjava2:rxjava:2.2.16'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'

    // ObjectBox browser dependencies must be set before applying ObjectBox plugin so it does not add objectbox-android
    // (would result in two conflicting versions, e.g. "Duplicate files copied in APK lib/armeabi-v7a/libobjectbox.so").
    if (includeObjectBoxBrowser.toBoolean()) {
        debugImplementation "io.objectbox:objectbox-android-objectbrowser:2.5.1"
        releaseImplementation "io.objectbox:objectbox-android:2.5.1"
    }

    // Cleaner date manipulation
    implementation 'com.jakewharton.threetenabp:threetenabp:1.2.1'

    // Animated PNG (apng) support -> https://github.com/penfeizhou/APNG4Android
    implementation 'com.github.penfeizhou.android.animation:apng:1.3.3'

    // https://github.com/mikepenz/FastAdapter
    implementation "com.mikepenz:fastadapter:5.0.2" // needs the `expandable`, `drag` and `scroll` extension.
    implementation "com.mikepenz:fastadapter-extensions-diff:5.0.2" // diff util helpers
    implementation "com.mikepenz:fastadapter-extensions-drag:5.0.2" // drag support
    implementation "com.mikepenz:fastadapter-extensions-expandable:5.0.2"
    implementation "com.mikepenz:fastadapter-extensions-scroll:5.0.2" // scroll helpers
    implementation "com.mikepenz:fastadapter-extensions-paged:5.0.2"
    implementation "com.mikepenz:fastadapter-extensions-ui:5.0.2" // needs the `expandable`, `drag` and `scroll` extension.
    implementation "com.mikepenz:fastadapter-extensions-utils:5.0.2" // needs the `expandable`, `drag` and `scroll` extension.
    implementation "com.mikepenz:materialize:1.2.1"

    // Fast scroller
    implementation "me.zhanghai.android.fastscroll:library:1.1.4"

    // Popups
    implementation "com.github.skydoves:balloon:1.1.7"

    implementation project(path: ':app:customssiv')
}

sonarqube {
    properties {
        property "sonar.projectKey", "RobbWatershed_GalleryCherry"
        property "sonar.organization", "robbwatershed-github"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.language", "java"
        property "sonar.sources", "src/main/"
        property "sonar.login", "7bd8f2c4d82122f3261f244bd86403bedceea072"
    }
}

unMock {
    keep "android.widget.BaseAdapter"
    keep "android.widget.ArrayAdapter"
    keep "android.os.Bundle"
    keepStartingWith "android.database.MatrixCursor"
    keep "android.database.AbstractCursor"
    keep "android.database.CrossProcessCursor"
    keepStartingWith "android.text.TextUtils"
    keepStartingWith "android.util."
    keepStartingWith "android.text."
    keepStartingWith "android.content.ContentValues"
    keepStartingWith "android.content.ComponentName"
    keepStartingWith "android.content.ContentUris"
    keepStartingWith "android.content.ContentProviderOperation"
    keepStartingWith "android.content.ContentProviderResult"
    keepStartingWith "android.content.UriMatcher"
    keepStartingWith "android.content.Intent"
    keepStartingWith "android.content.IIntentReceiver"
    keep "android.location.Location"
    keepStartingWith "android.content.res.Configuration"
    keepStartingWith "org."
    keepStartingWith "libcore."
    keepStartingWith "com.android.internal.R"
    keepStartingWith "com.android.internal.util."
    keep "android.net.Uri"
    keep "android.webkit.WebSettings"

    keepStartingWith "me."
}

apply plugin: 'com.google.gms.google-services'
apply plugin: 'io.objectbox' // apply last