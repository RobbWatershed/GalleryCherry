apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'org.sonarqube'

// apply signing configuration if config file exists
if (file('signing.gradle').exists()) {
    apply from: 'signing.gradle'
}

android {
    compileSdkVersion 28
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
    defaultConfig {
        applicationId "me.devsaki.cherry"
        minSdkVersion 19
        //noinspection ExpiringTargetSdkVersion
        targetSdkVersion 28
        versionCode 78
        versionName '1.2.5'

        def includeObjectBoxBrowser = System.getenv("INCLUDE_OBJECTBOX_BROWSER")?:"false"

        buildConfigField 'String', 'UPDATE_URL', '"https://raw.githubusercontent.com/RobbWatershed/GalleryCherry/master/app/"'
        buildConfigField "boolean", "INCLUDE_OBJECTBOX_BROWSER", includeObjectBoxBrowser

        proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
    buildTypes {
        debug {
            minifyEnabled true
            applicationIdSuffix ".debug"
            versionNameSuffix "-DEBUG"

            proguardFile 'proguard-rules-debug.pro'
        }
        release {
            debuggable false
            minifyEnabled true

            proguardFile 'proguard-rules-release.pro'
            testProguardFile 'proguard-rules-test.pro'

            // Library specific proguard files
            proguardFiles fileTree(dir: '../.proguard', include: ['*.pro']).asList().toArray()
        }
    }
    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }
}

dependencies {
    def includeObjectBoxBrowser = System.getenv("INCLUDE_OBJECTBOX_BROWSER")?:"false"

    // Compile any included libraries
    implementation fileTree(include: ['*jar'], dir: 'libs')
    implementation fileTree(include: ['*aar'], dir: 'libs')

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    // Firebase
    implementation 'com.google.firebase:firebase-core:17.0.0'

    // Crashlytics
    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'

    // Stetho core
//    implementation 'com.facebook.stetho:stetho:1.5.0'
    // Support libraries
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'androidx.exifinterface:exifinterface:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.cardview:cardview:1.0.0'
    //implementation 'com.google.android.material:material:1.0.0'
    implementation 'com.google.android.material:material:1.1.0-alpha08'
    implementation 'androidx.preference:preference:1.0.0'
    implementation 'androidx.media:media:1.0.1'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v13:1.0.0'
    implementation 'com.google.android.gms:play-services-safetynet:17.0.0'

    // <-- this one to fix the SSLHandshake error with okhttp on Android 4.1-4.4 when server only supports TLS1.2

    // Image loader: github.com/bumptech/glide
    implementation 'com.github.bumptech.glide:glide:4.8.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.8.0'
    implementation 'com.github.bumptech.glide:okhttp3-integration:4.8.0'

    // Intro screens or slides: github.com/apl-devs/AppIntro
    implementation 'com.github.paolorotolo:appintro:v5.1.0'

    // Java serialization/deserialization (Java Objects into JSON and back): github.com/google/gson
    implementation 'com.google.code.gson:gson:2.8.5'

    // Timber (Extensible Logger): github.com/JakeWharton/timber
    implementation 'com.jakewharton.timber:timber:4.7.1'

    // Download app updates (without user prompts): github.com/smanikandan14/ThinDownloadManager
    implementation 'com.mani:ThinDownloadManager:1.3.0'

    // HTTP & HTTP/2 client: github.com/square/okhttp
    implementation 'com.squareup.okhttp3:okhttp:3.11.0'

    // For downloading images : github.com/google/volley
    implementation 'com.android.volley:volley:1.1.1' // <-- if this evolves, please examine RequestQueueManager.getRequestQueue for evolutions

    // EventBus: github.com/greenrobot/EventBus
    implementation 'org.greenrobot:eventbus:3.1.1'

    // JSOUP HTML parser: github.com/jhy/jsoup
    implementation 'org.jsoup:jsoup:1.11.3'

    // Lightweight Stream : github.com/aNNiMON/Lightweight-Stream-API
    implementation 'com.annimon:stream:1.2.0'

    // LeakCanary: github.com/square/leakcanary -- WAITING FOR V2 TO BE STABILIZED
/*
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.3'
    debugImplementation 'com.squareup.leakcanary:leakcanary-support-fragment:1.6.3'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.3'
    testImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.3'
*/

    // Specific UI layout for tag mosaic : github.com/google/flexbox-layout
    implementation 'com.google.android:flexbox:1.1.0'

    // https://mvnrepository.com/artifact/commons-io/commons-io
    implementation 'commons-io:commons-io:2.6'

    // Retrofit-ready-ready HTML parser with CSS selectors : https://github.com/DroidsOnRoids/jspoon
    implementation 'pl.droidsonroids:jspoon:1.3.2'
    implementation 'pl.droidsonroids.retrofit2:converter-jspoon:1.3.2'

    //    https://github.com/square/retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'

    //    https://github.com/ReactiveX/RxJava
    implementation 'io.reactivex.rxjava2:rxjava:2.1.16'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'

    // For ViewModel to work
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel:2.0.0'

    // ObjectBox browser dependencies must be set before applying ObjectBox plugin so it does not add objectbox-android
    // (would result in two conflicting versions, e.g. "Duplicate files copied in APK lib/armeabi-v7a/libobjectbox.so").
    if (includeObjectBoxBrowser.toBoolean()) {
        debugImplementation "io.objectbox:objectbox-android-objectbrowser:2.3.1"
        releaseImplementation "io.objectbox:objectbox-android:2.3.1"
    }

    // https://github.com/davemorrissey/subsampling-scale-image-view
    implementation 'com.davemorrissey.labs:subsampling-scale-image-view:3.10.0'
    //implementation 'com.github.hereisderek:subsampling-scale-image-view:v3.10.2' // Compatible with AndroidX; crashes at resetScaleAndCenter

    // https://github.com/davideas/FlexibleAdapter
    implementation 'eu.davidea:flexible-adapter:5.1.0'
    implementation 'eu.davidea:flexible-adapter-ui:1.0.0'
}

sonarqube {
    properties {
        property "sonar.projectKey", "RobbWatershed_hentoid-sonar"
        property "sonar.organization", "robbwatershed-github"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.language", "java"
        property "sonar.sources", "src/main/"
        property "sonar.login", "3d0dc80792bad95f0193e7ed626cf090ac83e208"
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", "RobbWatershed_GalleryCherry"
        property "sonar.organization", "robbwatershed-github"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.language", "java"
        property "sonar.sources", "src/main/"
        property "sonar.login", "7bd8f2c4d82122f3261f244bd86403bedceea072"
    }
}

apply plugin: 'com.google.gms.google-services'
apply plugin: 'io.objectbox' // apply last